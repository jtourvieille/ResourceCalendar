@page "/{CalendarId}"

@inject DialogService DialogService

@using ResCalApp.Models

<RadzenScheduler @ref=@scheduler style="height: 768px;" TItem="Appointment" Data=@appointments StartProperty="Start" EndProperty="End"
                 TextProperty="Text" SelectedIndex="0"
                 SlotSelect=@OnSlotSelect AppointmentSelect=@OnAppointmentSelect>
    <RadzenWeekView />
</RadzenScheduler>

@code
{
    RadzenScheduler<Appointment> scheduler;

    IList<Appointment> appointments;

    protected override async Task OnInitializedAsync()
    {
        appointments = new List<Appointment>
        {
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F50", Start = DateTime.Today.AddDays(-2), End = DateTime.Today.AddDays(-2), Text = "Birthday" },
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F51", Start = DateTime.Today.AddDays(-11), End = DateTime.Today.AddDays(-10), Text = "Day off" },
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F52", Start = DateTime.Today.AddDays(-10), End = DateTime.Today.AddDays(-8), Text = "Work from home" },
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F53", Start = DateTime.Today.AddHours(10), End = DateTime.Today.AddHours(12), Text = "Online meeting" },
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F54", Start = DateTime.Today.AddHours(10), End = DateTime.Today.AddHours(13), Text = "Skype call" },
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F55", Start = DateTime.Today.AddHours(14), End = DateTime.Today.AddHours(14).AddMinutes(30), Text = "Dentist appointment" },
            new Appointment { CalendarId = "A5D9C74B-DAFF-42E7-8BE5-4385DCA11F56", Start = DateTime.Today.AddDays(1), End = DateTime.Today.AddDays(12), Text = "Vacation" },
        };

        appointments = appointments.Where(a => a.CalendarId == CalendarId).ToList();
    }

    [Parameter]
    public string CalendarId { get; set; }

    async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {
        Appointment data = await DialogService.OpenAsync<AddAppointmentPage>("Add Appointment",
            new Dictionary<string, object> { { "Start", args.Start }, { "End", args.End } });

        if (data != null)
        {
            appointments.Add(data);
    // Either call the Reload method or reassign the Data property of the Scheduler
            await scheduler.Reload();
        }
    }

    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Appointment> args)
    {
        await DialogService.OpenAsync<EditAppointmentPage>("Edit Appointment", new Dictionary<string, object> { { "Appointment", args.Data } });

        await scheduler.Reload();
    }
}
